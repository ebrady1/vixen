//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VixenModules.EffectEditor.EffectDescriptorAttributes {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class EffectDescriptionDescriptors {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal EffectDescriptionDescriptors() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("VixenModules.EffectEditor.EffectDescriptorAttributes.EffectDescriptionDescriptors" +
                            "", typeof(EffectDescriptionDescriptors).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls the brightness of the effect..
        /// </summary>
        internal static string Brightness {
            get {
                return ResourceManager.GetString("Brightness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets percentage of change..
        /// </summary>
        internal static string ChangePercent {
            get {
                return ResourceManager.GetString("ChangePercent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls the color of the effect..
        /// </summary>
        internal static string Color {
            get {
                return ResourceManager.GetString("Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls how the color is handled..
        /// </summary>
        internal static string ColorHandling {
            get {
                return ResourceManager.GetString("ColorHandling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls the default brightness of the inactive elements in the effect..
        /// </summary>
        internal static string DefaultBrightness {
            get {
                return ResourceManager.GetString("DefaultBrightness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates how many levels deep the effect should be grouped..
        /// </summary>
        internal static string Depth {
            get {
                return ResourceManager.GetString("Depth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets percent of deviation..
        /// </summary>
        internal static string DeviationPercent {
            get {
                return ResourceManager.GetString("DeviationPercent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls the direction of the effect..
        /// </summary>
        internal static string Direction {
            get {
                return ResourceManager.GetString("Direction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extends the pulse to the end of the effect from beyond it&apos;s normal ending position..
        /// </summary>
        internal static string ExtendPulseEnd {
            get {
                return ResourceManager.GetString("ExtendPulseEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extends the pulse back to the start of the effect from it&apos;s normal starting position..
        /// </summary>
        internal static string ExtendPulseStart {
            get {
                return ResourceManager.GetString("ExtendPulseStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets flicker frequency in changes per second..
        /// </summary>
        internal static string FlickerFrequency {
            get {
                return ResourceManager.GetString("FlickerFrequency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets percentage of flicker..
        /// </summary>
        internal static string FlickerPercent {
            get {
                return ResourceManager.GetString("FlickerPercent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls the maximum brightness of a pulse..
        /// </summary>
        internal static string MaxBrightness {
            get {
                return ResourceManager.GetString("MaxBrightness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls the minimum brightness of a pulse..
        /// </summary>
        internal static string MinBrightness {
            get {
                return ResourceManager.GetString("MinBrightness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls how long each pulse is in milliseconds..
        /// </summary>
        internal static string PulseDuration {
            get {
                return ResourceManager.GetString("PulseDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls how many milliseconds the individual pulses overlap..
        /// </summary>
        internal static string PulseOverlap {
            get {
                return ResourceManager.GetString("PulseOverlap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls the individual pulse shape..
        /// </summary>
        internal static string PulseShape {
            get {
                return ResourceManager.GetString("PulseShape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls how long each pulse is as a percentage of the spin..
        /// </summary>
        internal static string PulseSpinPercent {
            get {
                return ResourceManager.GetString("PulseSpinPercent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls how individual pulses are applied accross the effect..
        /// </summary>
        internal static string PulseType {
            get {
                return ResourceManager.GetString("PulseType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls how many revolutions of the spin will occur..
        /// </summary>
        internal static string RevolutionCount {
            get {
                return ResourceManager.GetString("RevolutionCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls the frequency in Hz at which the spin occurs..
        /// </summary>
        internal static string RevolutionFrequency {
            get {
                return ResourceManager.GetString("RevolutionFrequency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls the duration in milliseconds at which the spin occurs..
        /// </summary>
        internal static string RevolutionTime {
            get {
                return ResourceManager.GetString("RevolutionTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls how the individual spins occur..
        /// </summary>
        internal static string SpinSpeedFormat {
            get {
                return ResourceManager.GetString("SpinSpeedFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the color is a static color..
        /// </summary>
        internal static string StaticColorIndicator {
            get {
                return ResourceManager.GetString("StaticColorIndicator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls how long the averge pulse time in in the twinkle..
        /// </summary>
        internal static string TwinkleAvgPulseTime {
            get {
                return ResourceManager.GetString("TwinkleAvgPulseTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls how much of the effect by percent is covered in twinkles..
        /// </summary>
        internal static string TwinkleCoverage {
            get {
                return ResourceManager.GetString("TwinkleCoverage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls whether each individual element is twinkled independantly or all at once..
        /// </summary>
        internal static string TwinkleDepth {
            get {
                return ResourceManager.GetString("TwinkleDepth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls how much percent variation in the brightness level of each pulse in the twinkle..
        /// </summary>
        internal static string TwinkleVariation {
            get {
                return ResourceManager.GetString("TwinkleVariation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls the number of passes the wipe makes..
        /// </summary>
        internal static string WipeCount {
            get {
                return ResourceManager.GetString("WipeCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls the length of the pulse as a percentage of the effect time..
        /// </summary>
        internal static string WipePulsePercent {
            get {
                return ResourceManager.GetString("WipePulsePercent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls how the wipe behaves. Either by a count of passes, or by time related to pulse length..
        /// </summary>
        internal static string WipeType {
            get {
                return ResourceManager.GetString("WipeType", resourceCulture);
            }
        }
    }
}
